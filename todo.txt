[*] allow user to say moves such as a4 instead of a2-a4
[*] add two players
  [*] add state for ai or two_player
  [*] let player choose color
    [*] backend
    [*] speech model
  [*] display whos turn it is
[*] update new_game endpoint
[*] add reset endpoint which resets with same config as last game
[*] add speech interaction model for reset game
[] change move output speech to => white, a2 to a4
[*] add dummy ai (have it choose random move for now)
[*] BUG: added Unhandled intent to the newSessionHandlers


[] lambda change out dynamo for postgresql
[] figure out how authentication and keeping track of users will work with echo userId
[] work on move utterance/slots
[] update help intents speechOutput



-------------------------------------------------------------------------------

3/25
[*] create endpoint for chess move
[*] have sockets listen and emit moves on userId
[*] add chessjs for validating moves and keeping state
  [*] include module and deps
  [*] get basic api moves working
[*] Let the user know when his move is invalid
[*] new game / reset game
  [*] reset on server and update the db
  [*] reset client when game is reset on server
  [*] add voice model
[*] load game from fen string stored in the db when client is loaded
[*] firetv client change out dynamo for postgresql


3/24
[*] get project setup
[*] get dynamo db setup
[*] figure out speech model for chess moves - using nato phonetics
[*] add the other position slots
[*] convert raw speech text slots to board positions eg. alpha 1 to a1
[*] finish lambda move function
